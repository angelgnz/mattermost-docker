version: "3.3"
services:
  mattermost:
    # Note that this adds the "proxy" network to the container so that Traefik can route to it
    networks:
      - proxy
    labels:
      traefik.enable: "true"
      traefik.http.routers.mattermost.rule: "Host(`${DOMAIN}`)" # change to your domain name or use the .env variable as suggested here
      # The entrypoint is the one we defined in the Traefik configuration, i.e. 'websecure'. Some configurations use 'https' instead.
      traefik.http.routers.mattermost.entrypoints: "websecure"
      traefik.http.routers.mattermost.tls: "true"
      # prevent IP address access - commented out because not working as expected
      # traefik.http.routers.uptime.tls.options.default.sniStrict: true
      traefik.http.services.mattermost.loadbalancer.server.port: "3001"
      # The certificate resolver is the one we defined in the Traefik configuration, i.e. 'leresolver'
      traefik.http.routers.mattermost.tls.certresolver: "leresolver"
      traefik.docker.network: "proxy"

# The network used for Traefik is "proxy". I've also defined a "default" network for the other Plausible services to use for internal communication.
networks:
  default:
  proxy:
    external: true